{"version":3,"file":"316.43dec9bd592580fa5cf0.js","mappings":"2UAAA,MCIMA,GAAQ,OAAwB,GAEtCA,EAAMC,iBAAiB,UDNAC,GACnBA,EAAMC,OAAOC,aAAa,QAASF,EAAMC,OAAOE,SCOpD,U,yGCHA,GAFc,OAAwB,G,8HCHhCC,EAAoBC,IAEtB,MAAMC,EAAQC,KAAKC,KAAK,GAClBC,GAAQ,EAAIH,GAAS,EACrBI,GAAQ,EAAIJ,GAAS,EAK3B,OAJwBC,KAAKI,OACxBF,GAAQJ,EAAcK,GAAQL,GAAeC,EAG3CM,E,aCHX,MCDM,GAAS,OAAwB,GAEvC,EAAOb,iBAAiB,SDDA,MACpB,OAAYc,SAASC,cAAc,mBAAoB,SAAU,WACjE,OAAYD,SAASC,cAAc,WAAY,SAAU,UDIjC,EAACT,EAAaU,EAASC,KAC/C,MAAMJ,EAAkBG,EAAQV,GACjBW,EAERC,UAAY,+CAA+CZ,SAAmBO,GAE9EM,ECTPC,CACIC,OAAOP,SAASC,cAAc,iBAAiBO,aAAa,UAC5DjB,EACAS,SAASC,cAAc,cAC3B,ICJJ,S,iCCTA,MAEA,EAFoB,CAACE,EAAMM,EAAMrB,IAAWe,EAAKO,UAAUC,QAAQF,EAAMrB,E","sources":["webpack://fibonacci-numbers-generator/./src/features/input/elements/input/setInputValue.js","webpack://fibonacci-numbers-generator/./src/features/input/elements/input/input.js","webpack://fibonacci-numbers-generator/./src/features/input/elements/label/label.js","webpack://fibonacci-numbers-generator/./src/features/services/fibonacciNumService.js","webpack://fibonacci-numbers-generator/./src/features/input/elements/button/handleInput.copy.js","webpack://fibonacci-numbers-generator/./src/features/input/elements/button/button.js","webpack://fibonacci-numbers-generator/./src/features/utils/classUtils.js"],"sourcesContent":["const setInputValue = (event) =>\n    event.target.setAttribute('value', event.target.value)\n\nexport default setInputValue\n","import data from './input.data.json'\nimport createCustomizedElement from '../../../../utils/DOMElementUtils'\nimport setInputValue from './setInputValue'\n\nconst input = createCustomizedElement(data)\n\ninput.addEventListener('change', setInputValue)\n\nexport default input\n","import data from './label.data.json'\nimport createCustomizedElement from '../../../../utils/DOMElementUtils'\n\nconst label = createCustomizedElement(data)\n\nexport default label\n","const calcFibonacciNum = (queueNumber) => {\n    // Binet formula\n    const sqrt5 = Math.sqrt(5)\n    const PHI1 = (1 + sqrt5) / 2\n    const PHI2 = (1 - sqrt5) / 2\n    const fibonacciNumber = Math.round(\n        (PHI1 ** queueNumber - PHI2 ** queueNumber) / sqrt5\n    )\n\n    return fibonacciNumber\n}\n\nconst displayFibonacciNum = (queueNumber, handler, elem) => {\n    const fibonacciNumber = handler(queueNumber)\n    const output = elem\n\n    output.innerText = `The Fibonacci number at the sequence number ${queueNumber} is: ${fibonacciNumber}`\n\n    return output\n}\n\nexport { calcFibonacciNum, displayFibonacciNum }\n","import {\n    calcFibonacciNum,\n    displayFibonacciNum,\n} from '../../../services/fibonacciNumService'\nimport changeClass from '../../../utils/classUtils'\n\nconst handleInputCopy = () => {\n    changeClass(document.querySelector('#fibonacci-form'), 'd-flex', 'd-none')\n    changeClass(document.querySelector('#output'), 'd-none', 'd-flex')\n    displayFibonacciNum(\n        Number(document.querySelector('#input-number').getAttribute('value')),\n        calcFibonacciNum,\n        document.querySelector('#output h2')\n    )\n}\n\nexport default handleInputCopy\n","import data from './button.data.json'\nimport createCustomizedElement from '../../../../utils/DOMElementUtils'\n// import handleInput from './handleInput'\nimport handleInputCopy from './handleInput.copy'\n\nconst button = createCustomizedElement(data)\n\nbutton.addEventListener('click', handleInputCopy)\n\nexport default button\n","const changeClass = (elem, base, target) => elem.classList.replace(base, target)\n\nexport default changeClass\n"],"names":["input","addEventListener","event","target","setAttribute","value","calcFibonacciNum","queueNumber","sqrt5","Math","sqrt","PHI1","PHI2","round","fibonacciNumber","document","querySelector","handler","elem","innerText","output","displayFibonacciNum","Number","getAttribute","base","classList","replace"],"sourceRoot":""}